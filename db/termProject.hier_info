|input_handler
clk => valid_coordinate~reg0.CLK
clk => y_output[0]~reg0.CLK
clk => y_output[1]~reg0.CLK
clk => y_output[2]~reg0.CLK
clk => y_output[3]~reg0.CLK
clk => x_output[0]~reg0.CLK
clk => x_output[1]~reg0.CLK
clk => x_output[2]~reg0.CLK
clk => x_output[3]~reg0.CLK
clk => y_counter[0]~reg0.CLK
clk => y_counter[1]~reg0.CLK
clk => y_counter[2]~reg0.CLK
clk => y_counter[3]~reg0.CLK
clk => x_counter[0]~reg0.CLK
clk => x_counter[1]~reg0.CLK
clk => x_counter[2]~reg0.CLK
clk => x_counter[3]~reg0.CLK
clk => state[0]~reg0.CLK
clk => state[1]~reg0.CLK
reset => next_state[1].OUTPUTSELECT
reset => next_state[0].OUTPUTSELECT
reset => valid_coordinate~reg0.ACLR
reset => y_output[0]~reg0.ACLR
reset => y_output[1]~reg0.ACLR
reset => y_output[2]~reg0.ACLR
reset => y_output[3]~reg0.ACLR
reset => x_output[0]~reg0.ACLR
reset => x_output[1]~reg0.ACLR
reset => x_output[2]~reg0.ACLR
reset => x_output[3]~reg0.ACLR
reset => y_counter[0]~reg0.ACLR
reset => y_counter[1]~reg0.ACLR
reset => y_counter[2]~reg0.ACLR
reset => y_counter[3]~reg0.ACLR
reset => x_counter[0]~reg0.ACLR
reset => x_counter[1]~reg0.ACLR
reset => x_counter[2]~reg0.ACLR
reset => x_counter[3]~reg0.ACLR
reset => state[0]~reg0.ACLR
reset => state[1]~reg0.ACLR
logic_0_button => x_counter.OUTPUTSELECT
logic_0_button => x_counter.OUTPUTSELECT
logic_0_button => x_counter.OUTPUTSELECT
logic_0_button => x_counter.OUTPUTSELECT
logic_0_button => x_output.OUTPUTSELECT
logic_0_button => x_output.OUTPUTSELECT
logic_0_button => x_output.OUTPUTSELECT
logic_0_button => x_output.OUTPUTSELECT
logic_0_button => y_output.OUTPUTSELECT
logic_0_button => y_output.OUTPUTSELECT
logic_0_button => y_output.OUTPUTSELECT
logic_0_button => y_output.OUTPUTSELECT
logic_0_button => y_counter.OUTPUTSELECT
logic_0_button => y_counter.OUTPUTSELECT
logic_0_button => y_counter.OUTPUTSELECT
logic_0_button => y_counter.OUTPUTSELECT
logic_0_button => always1.IN0
logic_1_button => x_counter.OUTPUTSELECT
logic_1_button => x_counter.OUTPUTSELECT
logic_1_button => x_counter.OUTPUTSELECT
logic_1_button => x_counter.OUTPUTSELECT
logic_1_button => x_output.OUTPUTSELECT
logic_1_button => x_output.OUTPUTSELECT
logic_1_button => x_output.OUTPUTSELECT
logic_1_button => x_output.OUTPUTSELECT
logic_1_button => y_output.OUTPUTSELECT
logic_1_button => y_output.OUTPUTSELECT
logic_1_button => y_output.OUTPUTSELECT
logic_1_button => y_output.OUTPUTSELECT
logic_1_button => y_counter.OUTPUTSELECT
logic_1_button => y_counter.OUTPUTSELECT
logic_1_button => y_counter.OUTPUTSELECT
logic_1_button => y_counter.OUTPUTSELECT
logic_1_button => always1.IN1
activity_button => Mux0.IN3
activity_button => Mux1.IN3
activity_button => always0.IN1
x_output[0] << x_output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_output[1] << x_output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_output[2] << x_output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_output[3] << x_output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_output[0] << y_output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_output[1] << y_output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_output[2] << y_output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_output[3] << y_output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_counter[0] << x_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_counter[1] << x_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_counter[2] << x_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_counter[3] << x_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_counter[0] << y_counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_counter[1] << y_counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_counter[2] << y_counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_counter[3] << y_counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
valid_coordinate << valid_coordinate~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[0] << state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[1] << state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


